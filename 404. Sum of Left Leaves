404. Sum of Left Leaves

Find the sum of all left leaves in a given binary tree. There are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.
    3
   / \            BFS与DFS解法，时间空间复杂度均为O(n）
  9  20
    /  \
   15   7

class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
        if (root == null) return 0;
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        int ans = 0;
        while (!queue.isEmpty()) {
            TreeNode node = queue.poll();
            if (node.left != null) {
                    if (isLeaf(node.left)) ans += node.left.val;
                    else queue.offer(node.left); //把不是叶子的node放入queue
            }
            if (node.right != null) {
                    if (!isLeaf(node.right)) queue.offer(node.right);
            }
        }
        return ans;
    }
    private boolean isLeaf(TreeNode node) {
            return node.left == null && node.right == null;
    }
}

class Solution {
    public int sumOfLeftLeaves(TreeNode root) {
            if (root == null) return 0;
            return dfs(root);
    }   
    private int dfs(TreeNode root) {
        int sum = 0;
        if (root == null) return 0;
        if (root.left != null) {
            if (isLeaf(root.left)) sum += root.left.val;
        }
        sum += dfs(root.left) + dfs(root.right);
        return sum;
    }
}
