Implement the MapSum class:
void insert Inserts the key-val pair into the map. If the key already existed, the original key-value pair will be overridden to the new one.
int sum Returns the sum of all pairs' value whose key starts with the prefix.

class MapSum {
    private class Node {
        Node[] child = new Node[26];
        int value;
    }
    
    private Node root = new Node();
    public MapSum() {} //default constructor
    
    public void insert(String key, int val) {
            insert(key, root, val);
    }
    
    private void insert(String key, Node node, int val) {
        if (node == null) return;
        if (key.length() == 0) {
            node.value = val;
            return;
        }
        int index = key.charAt(0) - 'a';
        if (node.child[index] == null) node.child[index] = new Node();
        insert(key.substring(1), node.child[index], val);
    }
    
    public int sum(String prefix) {
            return sum(prefix, root);
    }
    
    private int sum(String prefix, Node node) {
        if (node == null) return 0;
        if (prefix.length() != 0) {
            int index = prefix.charAt(0) - 'a';
            return sum(prefix.substring(1), node.child[index]);
        }
        int sum = node.value;
        for (Node child: node.child) {
            sum += sum(prefix, child);
        }
        return sum;
    }
}
