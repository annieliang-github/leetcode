Given an integer array sorted in ascending order, write a function to search target in nums.  If target exists, then return its index, otherwise return -1. However, the array size is unknown to you. You may only access the array using an ArrayReader interface, where ArrayReader.get(k) returns the element of the array at index k.

You may assume all integers in the array are less than 10000, and if you access the array out of bounds, ArrayReader.get will return 2147483647.

class Solution {
    public int find(ArrayReader reader, int target) {
        if (reader.get(0) > target) return -1;
        int right = 1;
        while (reader.get(right) < target) { //需要找到right boundary
            right *= 2; //只要没找到，每次都乘以2
}
return binarySearch(reader, target, right);
}

private int binarySearch(ArrayReader reader, int target, int right) {
    int left = 0;
    while (left <= right) {
        int mid = left + (right - left) / 2;
        int currValue = reader.get(mid);
        if (currValue < target) left = mid + 1;
else if (currValue > target) right = mid - 1;
else return mid; 
}
return -1;
}
}
时间复杂度 O（logn）
