Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.
最笨的方法：merge 然后取median 时间复杂度O(m+n)，空间复杂度O(m+n)



public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        if (nums1 == null || nums2 == null) return 0;
        int len1 = nums1.length, len2 = nums2.length;
        if (len1 == 0) {
            if (len2 % 2 == 0) return (nums2[len2 / 2 - 1] + nums2[len2 / 2]) / 2.0;
            else return nums2[len2 / 2];
        }
        if (len2 == 0) {
            if (len1 % 2 == 0) return (nums1[len1 / 2 - 1] + nums1[len1 / 2]) / 2.0;
            else return nums1[len1 / 2];
        }
        int[] arr = merge(nums1, nums2), len = arr.length, mid = len / 2; 
        if (len % 2 == 0) return (arr[mid] + arr[mid - 1]) / 2.0;
        else return arr[mid];
}    
private int[] merge(int[] nums1, int [] nums2) {
        int len1 = nums1.length, len2 = nums2.length, ptr1 = 0, ptr2 = 0, ptr = 0;
        int[] newArr = new int[len1 + len2];
        while (ptr1 < len1 && ptr2 < len2) {
            if (nums1[ptr1] < nums2[ptr2]) newArr[ptr++] = nums1[ptr1++];
            else newArr[ptr++] = nums2[ptr2++];
        }
        while (ptr1 < len1) newArr[ptr++] = nums1[ptr1++];
         while (ptr2 < len2) newArr[ptr++] = nums2[ptr2++];
        return newArr;
}
