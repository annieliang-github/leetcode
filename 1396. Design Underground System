
void checkIn(int id, string stationName, int t)     
void checkOut(int id, string stationName, int t)     
double getAverageTime(string startStation, string endStation)     

class UndergroundSystem {
    class Event {
        public int id, time;
        public String stationName;
          public Event(int id, String stationName, int time) {
            this.id = id;
            this.stationName = stationName;
            this.time = time;
        }
    }
        class Average {
        public double total = 0;
        public int count = 0;
        public void updateAverage(int diff) {
            count++;
            total += diff;
        }
        public double getAverage() {return total / count;}
    }
    private Map<Integer, Event> arrivals;
    private Map<String, Average> averages;
    public UndergroundSystem() {
        arrivals = new HashMap<>();
        averages = new HashMap<>();
    }
    public void checkIn(int id, String stationName, int t) {
            arrivals.put(id, new Event(id, stationName, t)); //新建一个event并放入
    }
    public void checkOut(int id, String stationName, int t) {
        Event arrivalEvent = arrivals.get(id); //arrival map中取出相应旅程
        arrivals.remove(id); // 从arrival中移走
        int diff = t - arrivalEvent.time;
        String key = arrivalEvent.stationName + "," + stationName;
        Average avg = averages.containsKey(key)?averages.get(key):new Average();
        average.updateAverage(diff);
        averages.put(key, avg);
    }
    public double getAverageTime(String startStation, String endStation) {
        String key = startStation + "," + endStation;
        return averages.get(key).getAverage();
    }
}
