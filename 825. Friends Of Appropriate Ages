Some people will make friend requests. The list of their ages is given and ages[i] is the age of the ith person. 
Person A will NOT friend request person B (B != A) if any of the following conditions are true:
age[B] <= 0.5 * age[A] + 7
age[B] > age[A]
age[B] > 100 && age[A] < 100
Otherwise, A will friend request B.
Note that if A requests B, B does not necessarily request A. Also, people will not friend request themselves. How many total friend requests are made?
Example 1:
Input: [16,16]
Output: 2
Explanation: 2 people friend request each other.


class Solution {
    public int numFriendRequests(int[] ages) {
        Map<Integer, Integer> map = new HashMap<>();
        int res = 0;
        for (int i : ages) {
            //把年龄和该年龄的个数放入map
            map.put(i, map.getOrDefault(i, 0) + 1);
        }
        
        // 遍历map的所有年龄
        for (int a : map.keySet()) {
            for (int b : map.keySet()) {
                if (a * 0.5 + 7 >= b) continue;
                if (b > a) continue;
                if (b > 100 && a < 100) continue;
                res += map.get(a) * map.get(b); //若符合条件，用个数相乘
                //此时overcount了，应该是countA*（countA-1）因为不能和自己
                if (a == b) res -= map.get(a);
            }
        }
        return res;
    }
}
