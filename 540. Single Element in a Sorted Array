540. Single Element in a Sorted Array

You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once. Find this single element that appears only once.
Follow up: Your solution should run in O(log n) time and O(1) space.
Example 1:
Input: nums = [1,1,2,3,3,4,4,8,8]
Output: 2

class Solution {
    public int singleNonDuplicate(int[] nums) {

        int left = 0, right = nums.length - 1;
        if (right == 0) return nums[0];
        if (nums[0] != nums[1]) return nums[0];
        if (nums[right] != nums[right - 1]) return nums[right];
        
        while (left <= right) {
            int mid = left + (right - left) / 2;
            
            if (nums[mid] != nums[mid + 1] && nums[mid] != nums[mid - 1])
                    return nums[mid];
            if (((mid % 2) == 0 && nums[mid] == nums[mid + 1]) || 
((mid % 2) != 0 && nums[mid] == nums[mid - 1]))
                    left = mid + 1;
            else
                    right = mid - 1;
        }
            return -1;
    }
}




