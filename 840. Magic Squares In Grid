A 3 x 3 magic square is a 3 x 3 grid filled with distinct numbers from 1 to 9 such that each row, column, and both diagonals all have the same sum.

Given a row x col grid of integers, how many 3 x 3 "magic square" subgrids are there?  (Each subgrid is contiguous).

 

Example 1:

Input: grid = [[4,3,8,4],[9,5,1,9],[2,7,6,2]]
Output: 1
Explanation: 
The following subgrid is a 3 x 3 magic square:

while this one is not:

In total, there is only one magic square inside the given grid.
class Solution {
    public int numMagicSquaresInside(int[][] grid) {
        if (grid == null || grid.length == 0 || grid[0].length == 0) return 0;
        int row = grid.length, col = grid[0].length;
        int ans = 0;
        for (int i = 0; i < row - 2; i++) {
            for (int j = 0; j < col - 2; j++) {
                if (grid[i + 1][j + 1] != 5) continue; //判断中间的数字是否为5
                if (isMagic(grid, i, j)) ans++;
            }
        }
        return ans;
    }
    
    private boolean isMagic(int[][] grid, int i, int j) {
        int[] count = new int[9];
        for (int m = i; m < i + 3; m++) {
            for (int n = j; n < j + 3; n++) {
                int num = grid[m][n];
                // 0-8 对应1-9 九个数，数字4应该在index 3，即为num - 1
                if (num < 1 || num > 9 || count[num - 1] == 1) return false;
                count[num - 1]++; 
            }
        }
        if (grid[i][j] + grid[i][j + 1] + grid[i][j + 2] != 15) return false; //1行和
        if (grid[i + 1][j] + grid[i + 1][j + 1] + grid[i + 1][j + 2] != 15) return false; //2行和
        if (grid[i + 2][j] + grid[i + 2][j + 1] + grid[i + 2][j + 2] != 15) return false; //3行和
        if (grid[i][j] + grid[i + 1][j] + grid[i + 2][j] != 15) return false; //1列和
        if (grid[i][j + 1] + grid[i + 1][j + 1] + grid[i + 2][j + 1] != 15) return false; //2列和
        if (grid[i][j + 2] + grid[i + 1][j + 2] + grid[i +2][j + 2] != 15) return false; //3列和
        if (grid[i][j] + grid[i + 1][j + 1] + grid[i + 2][j + 2] != 15) return false; //左上右下对角线
        if (grid[i + 2][j] + grid[i + 1][j + 1] + grid[i][j + 2] != 15) return false; //右上左下对角线
        return true;
    }
}


  
      
      
      
