Given a string s which represents an expression, evaluate this expression and return its value. 
The integer division should truncate toward zero.
Example 1:
Input: s = " 3+5 / 2 "
Output: 5

class Solution {
    public int calculate(String s) {
        Stack<Integer> stack = new Stack<>();
        int number = 0;
        int sign = '+'; //先把第一个数字前的sign初始化为+
        
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if (Character.isDigit(c)) {
                    number = number * 10 + (c - '0'); //转成数字
            }
            //如果c不为空格且不是数字->符号 || c是最后一个元素
            if (c != ' ' && !Character.isDigit(c) || i == s.length() - 1) {
                if (sign == '+') { //此时的sign为前一个
                    stack.push(number);
                } else if (sign == '-') {
                    stack.push(-number);
                } else if (sign == '*') {
                    stack.push(stack.pop() * number); //和前一个数相乘                    } else if (sign == '/') {
                    stack.push(stack.pop() / number);
                }
                sign = c; //更新sign
                number = 0; //重置number
            }
        }
        //遍历后，可以直接把stack里面的元素pop出并相加
        int sum = 0;
        while (!stack.isEmpty()) {
            sum += stack.pop();
        }
        return sum;
    }
}

