Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.

Return the quotient after dividing dividend by divisor.

The integer division should truncate toward zero, which means losing its fractional part. For example, truncate(8.345) = 8 and truncate(-2.7335) = -2.


class Solution {
    public int divide(int dividend, int divisor) {
        if (dividend == Integer.MIN_VALUE && divisor == -1) {
            return Integer.MAX_VALUE;
        }
        
        // 判断结果是不是负数
        boolean isNegative = dividend > 0 && divisor < 0 || dividend < 0 && divisor > 0;
        
        // 将除数和被除数都转为负数
        dividend = -Math.abs(dividend);
        divisor = -Math.abs(divisor);
        
        int res = helper(dividend, divisor);
        
        return isNegative ? -res : res;
    }
    
    private int helper(int dividend, int divisor) {
        if (dividend > divisor) {
            return 0;
        }
        
        int sum = divisor;
        int count = 1;
        
        // 条件tmp + tmp < 0防止溢出
        while (sum + sum < 0 && dividend <= sum + sum) {
            count += count;
            sum += sum;
        }
            
        return count + helper(dividend - sum, divisor);
    }
}
